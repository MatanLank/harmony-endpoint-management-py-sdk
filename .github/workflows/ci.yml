name: CI Workflow

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

jobs:
  sonarqube:
    name: SonarCloud Analysis and JFrog XRay Scan
    runs-on: ubuntu-latest
    steps:
      # Step: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step: Install Dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Step: SonarCloud Scan with Docker
      - name: SonarCloud Scan with Docker
        env:
          SONAR_TOKEN: ${{ secrets.DEVSEC01 }}
        run: |
          docker run --rm \
          -e SONAR_TOKEN="${SONAR_TOKEN}" \
          -v "${GITHUB_WORKSPACE}:/usr/src" \
          sonarsource/sonar-scanner-cli:latest \
          sonar-scanner \
          -Dsonar.projectKey=MatanLank_harmony-endpoint-management-py-sdk \
          -Dsonar.organization=matanlank80 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.sources=.

      # Step: Create the Artifact Directory
      - name: Create Artifact Directory
        run: mkdir -p folder1/package1

      # Step: Create the Artifact
      - name: Create Artifact
        run: zip -r artifact.zip folder1/package1

      # Step: Upload Artifact to JFrog Artifactory
      - name: Upload Artifact to JFrog Artifactory
        env:
          JFROG_IDENTITY_TOKEN: ${{ secrets.JFROG_IDENTITY_TOKEN }}
        run: |
          curl -u "admin:${JFROG_IDENTITY_TOKEN}" \
          -T artifact.zip \
          "https://matanlank.jfrog.io/artifactory/matan-pypi-repo-pypi/folder1/package1.zip"

      # Step: Trigger JFrog XRay Scan
      - name: Trigger JFrog XRay Scan
        env:
          JFROG_IDENTITY_TOKEN: ${{ secrets.JFROG_IDENTITY_TOKEN }}
        run: |
          curl -X POST "https://matanlank.jfrog.io/xray/api/v1/scanArtifact" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${JFROG_IDENTITY_TOKEN}" \
          -d '{
              "repo_key": "matan-pypi-repo-pypi",
              "artifact_path": "folder1/package1.zip"
            }'

      # Step: Check SonarCloud Quality Gate
      - name: Check SonarCloud Quality Gate
        if: ${{ always() }}
        run: |
          curl -X GET "https://sonarcloud.io/api/qualitygates/project_status?projectKey=MatanLank_harmony-endpoint-management-py-sdk" | grep '"status":"ERROR"' && exit 1 || exit 0

      # Step: Check JFrog XRay Scan Results (Fail on Critical Issues)
      - name: Check JFrog XRay Results
        if: ${{ always() }}
        env:
          JFROG_IDENTITY_TOKEN: ${{ secrets.JFROG_IDENTITY_TOKEN }}
        run: |
          response=$(curl -X GET "https://matanlank.jfrog.io/xray/api/v1/summary/component?component_details=matan-pypi-repo-pypi/folder1/package1.zip" -H "Authorization: Bearer ${JFROG_IDENTITY_TOKEN}")
          echo "$response" | grep '"severity":"Critical"' && exit 1 || exit 0

